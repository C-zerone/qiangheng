瑲珩（ㄑㄧㄤ　ㄏㄥˊ）名字取自於“倉”頡及“行”列的頭一個字再加玉字

瑲珩專注在於自動生成輸入法的表格。目前專注在於倉頡、行列、大易、嘸蝦米、鄭碼等輸入法。
亦即建立每個字的結構描述，以一些基礎字根及字的字碼，並透過輸入法的演算法來自動產生所有
字的字碼。

== 原理說明 ==
漢字或中文字是由許多部件或字根所組成。
目前的輸入都是透過輸入法程式或軟體，透過輸入數個鍵給輸入法程式，再由程式查表去決定檢索
到哪個字。輸入時所用的碼稱為外碼。現行的方法中，都是人去為每個部件編碼，並由人去看字符
的形狀，將字分解成許多部件，再根據部件的對應碼來生成字符的外碼。於是，要輸入一個字符，
都要由人去決定其外碼。

這裡則採用另一種作法，在檔案或資料庫儲存基本部件或字根的外碼，及其它未編碼的字符的結構
描述。未編碼的字符的外碼可以由其組合部件（其資訊包含於其結構描述）的外碼來生成，且其生
成方式規律並可以透過程式來描述。於是，便可透過程式來生成輸入法對照表。

對倉頡而言：
組合部件時，只要將部件的外碼視情況取部件的首碼、尾碼或首碼、次碼及尾碼，再組合即成。
如，

	字符	倉頡碼
	王	mg
	倉	oiar
	車	jdj
	俞	ombn

取'王'的首碼（'m'）及尾碼（'g'）和倉的首碼（'o'）、次碼（'i'）、尾碼（'r'），組合成'mgoir'
，作為'瑲'的外碼。又取'車'的首碼（'j'）及尾碼（'j'）和'俞'的首碼（'o'）、次碼（'m'）、尾碼
（'n'），組合成'jjomn'，作為'輸'的外碼

對行列、大易、嘸蝦米而言：
組合部件時，只要將部件的外碼合併，若超過四個，則取前三後一。嘸蝦米則要另外
考慮若不足兩碼，再添加一個補碼。以大易為例：

	字符	大易碼
	王	5
	倉	ar/o
	車	6
	俞	ajn

將'王'的外碼（'5'）和'倉'的外碼（'ar/o'）合併成'5ar/o'，超過四碼，所以取前三碼（'5ar'）和
最後一碼（'o'），合併成'5aro'，作為'瑲'的外碼。

對鄭碼而言：
對部件分類，各類別的部件互相結合時，採用適當的組合方式。

== 用法說明 ==
Usage: qiangheng.py [options]

Options:
  -h, --help            show this help message and exit
  -g IMNAME, --gen=IMNAME
                        輸入法名稱
  -s STYLE, --style=STYLE
                        表格格式

其中的 IMNAME 可以為：
	['倉', '倉頡', '倉頡輸入法', 'cangjie', 'cj',]
	['行', '行列', '行列輸入法', 'array', 'ar',]
	['易', '大易', '大易輸入法', 'dayi', 'dy',]
	['嘸', '嘸蝦米', '嘸蝦米輸入法', 'boshiamy', 'bs',]
	['鄭', '鄭碼', '鄭碼輸入法', 'zhengma', 'zm',]

其中的 STYLE 可以為：
	['scim', 'gcin', 'umie',]
	uime 用於微軟視窗作業系統上的 uimetool

== 檔案說明 ==
   README.txt		說明文件
   U4E00-U9FA6.txt	字的結構描述
   qiangheng.py		主程式
   char.py		字符類別
   im.py		輸入法類別

== 結構說明 ==
每行定義一個字的結構。以 "叡" 字來做說明。

	U+7472	瑲	(好 王倉)

第一欄的 U+7472 為統一碼的編號，第二欄為其字。第三欄為結構。
結構的格式為：
	(X  YZ)
X, Y, Z 皆為漢字，其中， X 表運算子，Y 表運算元。以上例而言， X='好' ，是指這個字是左右
結構的。 Y='王', Z='倉' 皆為運算元，表示此字是這兩個部件所組成。其它運算元還有：
	龜	代表此字不可分，是一個基礎的部件、字根，或不易分解。
	志	代表上下結構。如：兲=(志 王八)
	回	代表包圍結構，如：囚=(回 囗人)
	同	代表三面包圍的結構。悶=(同 門心)

若為'(龜)'，則後面還有七欄，分別表示"倉頡碼"、"行列碼"、"大易碼"、"嘸蝦米碼"、"嘸蝦米補
碼"、"鄭碼"、"鄭碼類形"。鄭碼類形由兩個數字所組成，第一個為"由幾個部性組成"、第二個為
"第一個部件有幾個碼"。如：

	# U+	字	構	倉	行	易	嘸	嘸補	鄭	鄭類
	U+9F8D	龍	(龜)	ybysu	yuq	kj9x	lul	e	si	12

若出現 XXXX ，則表示尚須決定。

為何運算元要使用漢字，不使用英文字母或數字？
因為對漢字結構要分哪些類還不清楚，有可能隨時更動。從英文字母不容易看出所代表的結構。再
者， Python 對統一碼的處理還不錯。

== 其它 ==
字的結構可能有些冗餘
原因有：
一、不同輸入法有不同的拆法。如：'元'在倉頡的拆法因看視為'(志 一兀)'，但在嘸蝦米的看法則
為'(志 二儿)'。
二、為了封閉性。目前只專注在於 U+4E00~U+9FA6 。未來可能會擴展。有些字拆解後，其部分可能
會落在這個區域外。所以暫時不分解。如'冠'可拆為'(志 冖㝴)，然而㝴不屬於U+4E00~U+9FA6。

拆碼有些不同：
一、倉頡。
二、行列輸入法在輸入罕見字時，要在最後再加 I(8^) 在字根同時為字時，要重複輸入四次如：
'凵'的字碼為 wwww，'尸'的字碼為 bbbb 。但一則是這規則實在太多餘，二來是不方便寫程式判斷
。因此，不採用類似規格。
三、嘸蝦米未滿三碼要補一碼，如：'木'為 t ，但要補一碼 n ，所以 'tn' 才是'木'的嘸蝦米碼。
但在字中，則只能用 t ，如：'林'的嘸蝦米碼為'ttn'，而為'tntn'之類的。因為是兩個 t ，再補
一個尾碼。在這個檔案中，則'木'只用 t ，而在程式生成時，再判斷是否要補上尾碼。

