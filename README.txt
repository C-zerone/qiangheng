瑲珩（ㄑㄧㄤ　ㄏㄥˊ）名字取自於“倉”頡及“行”列的頭一個字再加玉字

瑲珩專注在於自動生成輸入法的表格。目前專注在於倉頡、行列、大易、嘸蝦米、鄭碼等輸入法。
亦即建立每個字的結構描述，以一些基礎字根及字的字碼，並透過輸入法的演算法來自動產生所有
字的字碼。

== 安裝 ==
IBus
	輸入法檔案為 tables/ibus/*.db ，圖示檔為 icons/*.svg 。
	選擇所要使用的輸入法，
	將輸入法檔複製到 /usr/share/ibus-table/tables，將圖示檔複製到 /usr/share/ibus-table/icons 。

	重新載入。

SCIM
	輸入法檔案為 tables/scim/*.bin ，圖示檔為 icons/*.bin 。
	選擇所要使用的輸入法，
	將輸入法檔複製到 /usr/share/scim/tables，將圖示檔複製到 /usr/share/scim/icons 。


	重新登入。

GCIN
	輸入法檔案為 tables/gcin/*.gtab ，圖示檔為 pixmaps/*.png 。
	選擇所要使用的輸入法，
	將輸入法檔複製到 /usr/share/gcin/table，將圖示檔複製到 /usr/share/pixmaps/gcin 。
	修改 /usr/share/gcin/table/gtab.list

	重新執行。

OVIM
	香草輸入法(OpenVanilla)。
	輸入法檔案為 tables/ovim/*.cin ，圖示檔為 pixmaps/*.png 。
	未測試過。請依香草輸入法的方式將相關檔案放置至正確位置。

MSIM
	微軟視窗 IME。
	輸入法檔案為 tables/msim/*.cin 。
	請使用「通用輸入法編輯工具」。請點選「附屬應用程式」中的「通用輸入法編輯工具」。
	依步驟完成安裝。
	未測試過。請依香草輸入法的方式將相關檔案放置至正確位置。

== 原理說明 ==
請參考 tex/principle.pdf

== 用法說明 ==
Usage: qiangheng.py [options]

Options:
  -h, --help            show this help message and exit
  -t PTFILE, --pure-table-file=PTFILE
                        表格名稱
  -i IMNAME, --im=IMNAME
                        輸入法名稱
  -m METHOD, --method=METHOD
                        産生的方式
  -p PLATFORM, --platform=PLATFORM
                        目標平台
  --dir-charinfo=DIR_CHARINFO
                        結構所在的目錄

其中的 IMNAME 可以為：
	['倉', '倉頡', '倉頡輸入法', 'cangjie', 'cj',]
	['行', '行列', '行列輸入法', 'array', 'ar',]
	['易', '大易', '大易輸入法', 'dayi', 'dy',]
	['嘸', '嘸蝦米', '嘸蝦米輸入法', 'boshiamy', 'bs',]
	['鄭', '鄭碼', '鄭碼輸入法', 'zhengma', 'zm',]

其中的 METHOD 可以為：
        ['動', '動態', '動態組碼', 'dynamic',]
        ['表', '表格', 'puretable', 'pt']

其中的 PLATFORM 可以為：
	['scim', 'gcin', 'msim', 'puretable']
	msim 用於微軟視窗作業系統上的 uimetool

其中的 PTFILE 為：
	當 METHOD 為 ['表', '表格', 'puretable', 'pt'] 時，所使用檔名

其中的 DIR_CHARINFO 為用來指定字形結構檔所在的目錄。預設為 charinfo/ 。
另提供 test/charinfo/ ，包含較小字集，用於測試用途。可使用
	make testing


== 檔案說明 ==
   README.txt		說明文件
   charinfo/		字的結構描述所在目錄
   character/		字符類別
   im/			處理輸入法相關的元件
   qiangheng.py		主程式
   qhparse.py		字的結構描述的剖析元件
   platform.py		處理於輸入法平台有關

== 結構說明 ==
每行定義一個字的結構。以 "叡" 字來做說明。

	U+7472	瑲	(好 王倉)

第一欄的 U+7472 為統一碼的編號，第二欄為其字。第三欄為結構。
結構的格式為：
	(X  YZ)
X, Y, Z 皆為漢字，其中， X 表運算子，Y 表運算元。以上例而言， X='好' ，是指這個字是左右
結構的。 Y='王', Z='倉' 皆為運算元，表示此字是這兩個部件所組成。其它運算元還有：
	龜	代表此字不可分，是一個基礎的部件、字根，或不易分解。
	志	代表上下結構。如：兲=(志 王八)
	回	代表包圍結構，如：囚=(回 囗人)
	同	代表三面包圍的結構。悶=(同 門心)

若為'(龜)'，則後面還有七欄，分別表示"倉頡碼"、"行列碼"、"大易碼"、"嘸蝦米碼"、"嘸蝦米補
碼"、"鄭碼"、"鄭碼類形"。鄭碼類形由兩個數字所組成，第一個為"由幾個部性組成"、第二個為
"第一個部件有幾個碼"。如：

	# U+	字	構	倉	行	易	嘸	嘸補	鄭	鄭類
	U+9F8D	龍	(龜)	ybysu	yuq	kj9x	lul	e	si	12

若出現 XXXX ，則表示尚須決定。

為何運算元要使用漢字，不使用英文字母或數字？
因為對漢字結構要分哪些類還不清楚，有可能隨時更動。從英文字母不容易看出所代表的結構。再
者， Python 對統一碼的處理還不錯。

== 進度說明 ==
倉頡、行列、大易、嘸蝦米和鄭碼的基本字集的拆碼已完成。

目前能產生的字為 Unicode U+4E00 ~ U+9FA5 ，共 20902 字
對於正確率，目前只有倉頡的部分與馬來西亞倉頡之友的比對過
約有 187 個字是不符的
其它輸入法仍有許多錯


== 其它 ==
字的結構可能有些冗餘
原因有：
一、不同輸入法有不同的拆法。如：'元'在倉頡的拆法因看視為'(志 一兀)'，但在嘸蝦米的看法則
為'(志 二儿)'。
二、為了封閉性。目前只專注在於 U+4E00~U+9FA6 。未來可能會擴展。有些字拆解後，其部分可能
會落在這個區域外。所以暫時不分解。如'冠'可拆為'(志 冖㝴)，然而㝴不屬於U+4E00~U+9FA6。

拆碼有些不同：
一、倉頡。
二、行列輸入法在輸入罕見字時，要在最後再加 I(8^) 在字根同時為字時，要重複輸入四次如：
'凵'的字碼為 wwww，'尸'的字碼為 bbbb 。但一則是這規則實在太多餘，二來是不方便寫程式判斷
。因此，不採用類似規格。
三、嘸蝦米未滿三碼要補一碼，如：'木'為 t ，但要補一碼 n ，所以 'tn' 才是'木'的嘸蝦米碼。
但在字中，則只能用 t ，如：'林'的嘸蝦米碼為'ttn'，而為'tntn'之類的。因為是兩個 t ，再補
一個尾碼。在這個檔案中，則'木'只用 t ，而在程式生成時，再判斷是否要補上尾碼。

