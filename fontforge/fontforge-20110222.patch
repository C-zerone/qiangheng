diff -Naur fontforge-20110222.orig/fontforge/python.c fontforge-20110222/fontforge/python.c
--- fontforge-20110222.orig/fontforge/python.c	2011-07-02 22:38:51.000000000 +0800
+++ fontforge-20110222/fontforge/python.c	2011-07-02 22:44:59.000000000 +0800
@@ -6370,8 +6370,8 @@
 	    PyObject *bytes = PyUnicode_AsUTF8String(obj);
 	    parts[i].component = copy(PyBytes_AsString(bytes));
 	    Py_DECREF(bytes);
-	} else if ( PyString_Check(obj)) {
-	    parts[i].component = copy(PyString_AsString(obj));
+	} else if ( PyBytes_Check(obj)) {
+	    parts[i].component = copy(PyBytes_AsString(obj));
 	} else if ( PyTuple_Check(obj) && PyTuple_Size(obj)>0 &&
 		PyType_IsSubtype(&PyFF_GlyphType,PyTuple_GetItem(obj,0)->ob_type) ) {
 	    PyObject *g;
@@ -7406,19 +7406,36 @@
     KernPair *kp;
     struct lookup_subtable *sub;
     char *subname;
+#if PY_MAJOR_VERSION >= 3
+    PyObject *bytes;
+#endif
 
     if ( sf_sl->cidmaster!=NULL ) sf_sl = sf_sl->cidmaster;
     else if ( sf_sl->mm!=NULL ) sf_sl = sf_sl->mm->normal;
 
+#if PY_MAJOR_VERSION >= 3
+    bytes = PyUnicode_AsUTF8String(PySequence_GetItem(args,0));
+    if (bytes == NULL)
+return( NULL );
+    subname = PyBytes_AsString(bytes);
+    if ( subname==NULL ) {
+        Py_DECREF( bytes );
+return( NULL );
+    }
+#else /* PY_MAJOR_VERSION >= 3 */
     subname = PyBytes_AsString(PySequence_GetItem(args,0));
     if ( subname==NULL )
 return( NULL );
+#endif /* PY_MAJOR_VERSION >= 3 */
     if ( *subname=='*' )
 	sub = NULL;
     else {
 	sub = SFFindLookupSubtable(sf,subname);
 	if ( sub==NULL ) {
 	    PyErr_Format(PyExc_KeyError, "Unknown lookup subtable: %s",subname);
+#if PY_MAJOR_VERSION >= 3
+        Py_DECREF( bytes );
+#endif
 return( NULL );
 	}
     }
@@ -7498,6 +7515,9 @@
 	if ( i==0 )
 	    ret = PyTuple_New(cnt);
     }
+#if PY_MAJOR_VERSION >= 3
+    Py_DECREF( bytes );
+#endif
 return( ret );
 }
 
@@ -7509,19 +7529,36 @@
     KernPair *kp, *kpnext, *kpprev;
     struct lookup_subtable *sub;
     char *subname;
+#if PY_MAJOR_VERSION >= 3
+    PyObject *bytes;
+#endif
 
     if ( sf_sl->cidmaster!=NULL ) sf_sl = sf_sl->cidmaster;
     else if ( sf_sl->mm!=NULL ) sf_sl = sf_sl->mm->normal;
 
+#if PY_MAJOR_VERSION >= 3
+    bytes = PyUnicode_AsUTF8String(PySequence_GetItem(args,0));
+    if (bytes == NULL)
+return( NULL );
+    subname = PyBytes_AsString(bytes);
+    if ( subname==NULL ) {
+        Py_DECREF( bytes );
+return( NULL );
+    }
+#else /* PY_MAJOR_VERSION >= 3 */
     subname = PyBytes_AsString(PySequence_GetItem(args,0));
     if ( subname==NULL )
 return( NULL );
+#endif /* PY_MAJOR_VERSION >= 3 */
     if ( *subname=='*' )
 	sub = NULL;
     else {
 	sub = SFFindLookupSubtable(sf,subname);
 	if ( sub==NULL ) {
 	    PyErr_Format(PyExc_KeyError, "Unknown lookup subtable: %s",subname);
+#if PY_MAJOR_VERSION >= 3
+        Py_DECREF( bytes );
+#endif
 return( NULL );
 	}
     }
@@ -7558,6 +7595,9 @@
 		kpprev = kp;
 	}
     }
+#if PY_MAJOR_VERSION >= 3
+    Py_DECREF( bytes );
+#endif
 Py_RETURN( self );
 }
 
@@ -15308,7 +15348,7 @@
 static PyTypeObject PyFF_AWGlyphType, PyFF_AWGlyphIndexType, PyFF_AWContextType;
 
 static void PyFF_AWGlyphIndex_dealloc(PyFF_AWGlyphI *self) {
-    self->ob_type->tp_free((PyObject *) self);
+    ((PyObject*)self)->ob_type->tp_free((PyObject *) self);
 }
 
 static Py_ssize_t PyFF_AWGlyphLength( PyObject *self ) {
@@ -15343,8 +15383,12 @@
 };
 
 static PyTypeObject PyFF_AWGlyphIndexType = {
+#if PY_MAJOR_VERSION >= 3
+    PyVarObject_HEAD_INIT(NULL, 0)
+#else
     PyObject_HEAD_INIT(NULL)
     0,                         /*ob_size*/
+#endif
     "fontforge.awglyphIndex",       /*tp_name*/
     sizeof(PyFF_AWGlyphI),     /*tp_basicsize*/
     0,                         /*tp_itemsize*/
@@ -15391,7 +15435,7 @@
 	self->base->python_data = NULL;
 	self->base = NULL;
     }
-    self->ob_type->tp_free((PyObject *) self);
+    ((PyObject*)self)->ob_type->tp_free((PyObject *) self);
 }
 
 static PyObject *GetPythonObjectForAWGlyph(AW_Glyph *aw) {
@@ -15472,8 +15516,12 @@
 };
 
 static PyTypeObject PyFF_AWGlyphType = {
+#if PY_MAJOR_VERSION >= 3
+    PyVarObject_HEAD_INIT(NULL, 0)
+#else
     PyObject_HEAD_INIT(NULL)
     0,                         /*ob_size*/
+#endif
     "fontforge.awglyph",       /*tp_name*/
     sizeof(PyFF_AWGlyph),      /*tp_basicsize*/
     0,                         /*tp_itemsize*/
@@ -15522,7 +15570,7 @@
 	self->base->python_data = NULL;
 	self->base = NULL;
     }
-    self->ob_type->tp_free((PyObject *) self);
+    ((PyObject*)self)->ob_type->tp_free((PyObject *) self);
 }
 
 static PyObject *GetPythonObjectForAWData(AW_Data *all) {
@@ -15587,8 +15635,12 @@
 };
 
 static PyTypeObject PyFF_AWContextType = {
+#if PY_MAJOR_VERSION >= 3
+    PyVarObject_HEAD_INIT(NULL, 0)
+#else
     PyObject_HEAD_INIT(NULL)
     0,                         /*ob_size*/
+#endif
     "fontforge.awcontext",     /*tp_name*/
     sizeof(PyFF_AWContext),    /*tp_basicsize*/
     0,                         /*tp_itemsize*/
